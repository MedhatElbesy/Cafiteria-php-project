
-- use cafeteria;

-- rooms table

create TABLE rooms 
(id int AUTO_INCREMENT PRIMARY key,
 extNumber int);


-- category table

CREATE TABLE category 
(  id int(11) NOT NULL AUTO_INCREMENT,
  name varchar(100) NOT NULL, 
  img varchar(255) DEFAULT NULL,
   PRIMARY KEY (id));



-- product table

CREATE TABLE product
 (  id int(11) NOT NULL AUTO_INCREMENT,
  category_id int(11) NOT NULL,
   img varchar(100) DEFAULT NULL, 
    name varchar(100) NOT NULL, 
     price DECIMAL DEFAULT NULL, 
      available enum('available', 'non available') NOT NULL, 
       PRIMARY KEY (id), 
        KEY fk_category (category_id),  
        CONSTRAINT fk_category FOREIGN KEY (category_id) REFERENCES category (id));


-- admin table

CREATE TABLE admin 
(  id int(11) NOT NULL AUTO_INCREMENT,
  fname varchar(255) DEFAULT NULL, 
   lname varchar(255) DEFAULT NULL,  
   password varchar(255) DEFAULT NULL, 
    email varchar(255) DEFAULT NULL,
      img varchar(255) DEFAULT NULL,  
      PRIMARY KEY (id),  
      UNIQUE KEY email (email));


-- customers table

CREATE TABLE customers
 (  id int(11) AUTO_INCREMENT NOT NULL,
   fname varchar(255) DEFAULT NULL,
     lname varchar(255) DEFAULT NULL,
       password varchar(255) DEFAULT NULL, 
        email varchar(255) DEFAULT NULL,
          img varchar(255) DEFAULT NULL, room int(11) DEFAULT NULL,
            PRIMARY KEY (id),FOREIGN KEY(room) REFERENCES rooms(id) , 
             UNIQUE KEY email (email));


-- orders table

CREATE TABLE orders
 (id int(11) NOT NULL AUTO_INCREMENT, 
  order_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status enum('processing','done','in delivery') DEFAULT NULL,
      total_price DECIMAL  NOT NULL ,
        customers_id int(11) DEFAULT NULL,
         PRIMARY KEY (id), 
         CONSTRAINT fk_orders_customers FOREIGN KEY (customers_id) REFERENCES customers (id));






-- order_product table

CREATE TABLE order_product
 (  order_id int(11) NOT NULL,
   product_id int(11) NOT NULL, 
    quantity int(11) NOT NULL, 
     price_unit DECIMAL NOT NULL, 
      PRIMARY KEY (order_id,product_id),
        KEY product_id (product_id), 
         CONSTRAINT c_order_ibfk_1 FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE,
           CONSTRAINT c_order_ibfk_2 FOREIGN KEY (product_id) REFERENCES product (id) ON DELETE CASCADE);

-- insert into rooms table
INSERT INTO rooms (extNumber) VALUES
(101),
(102),
(103);

-- insert into category table

INSERT INTO category (name) VALUES
('Electronics'),
('Clothing'),
('Home Appliances');


-- insert into product table

INSERT INTO product (img, name, price,available, category_id) VALUES
('laptop.jpg', 'Laptop', 1000,'available', 1),
('shirt.jpg', 'T-Shirt', 20,'available', 2),
('fridge.jpg', 'Refrigerator', 800,'available', 3);

-- insert into admin table

INSERT INTO admin (fname, lname, password, email, img) VALUES
('Admin', 'User', 'adminpass', 'admin@example.com', 'admin_image.jpg');

-- insert into customers table

INSERT INTO customers (fname, lname, password, email, img, room) VALUES
('John', 'Doe', 'password123', 'john.doe@example.com', 'john_image.jpg', 1),
('Jane', 'Smith', 'pass456', 'jane.smith@example.com', 'jane_image.jpg', 2),
('Bob', 'Johnson', 'bobpass', 'bob.johnson@example.com', 'bob_image.jpg', 3);

-- insert into orders table

INSERT INTO orders (order_date, status, total_price,customers_id) VALUES
('2024-03-04 12:00:00', 'processing',3000, 1),
('2024-03-05 14:30:00', 'done',5000, 2),
('2024-03-06 12:00:00', 'processing',7000, 1),
('2024-03-07 10:45:00', 'in delivery',8000, 3);

-- insert into order_product table

INSERT INTO order_product (order_id, product_id, quantity, price_unit) VALUES
(1, 1, 2, 40),
(2, 2, 3, 60),
(3, 3, 1, 30);

